name: NT8 Guard (layout-aware)

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.cs'
      - '.github/workflows/nt8-guard.yml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]
    paths:
      - '**/*.cs'
      - '.github/workflows/nt8-guard.yml'
  workflow_dispatch:

jobs:
  guard:
    runs-on: ubuntu-latest
    container:
      image: mono:6.12
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify mcs
        shell: bash
        run: |
          set -euo pipefail
          mcs --version

      - name: Stage A — Abstractions/Common/Strategies (portable only)
        shell: bash
        run: |
          set -euo pipefail
          folders=(Abstractions Common Strategies)
          portable_files=()
          for d in "${folders[@]}"; do
            [ -d "$d" ] || continue
            while IFS= read -r -d '' f; do
              if grep -qE 'using[[:space:]]+NinjaTrader|namespace[[:space:]]+NinjaTrader|using[[:space:]]+NT8\.SDK\.' "$f"; then
                echo "::notice file=$f::Skipping non-portable source (references NinjaTrader/NT8.SDK)"
              else
                portable_files+=("$f")
              fi
            done < <(find "$d" -type f -name '*.cs' -print0)
          done
          if [ ${#portable_files[@]} -eq 0 ]; then
            echo "::warning ::Stage A found no portable .cs files; skipping compile"
            exit 0
          fi
          mcs -langversion:7.2 -target:library -out:stageA.dll "${portable_files[@]}"

      - name: Stage B — Orders/NT8Bridge/Risk/Session (portable only)
        shell: bash
        run: |
          set -euo pipefail
          folders=(Orders NT8Bridge Risk Session)
          portable_files=()
          for d in "${folders[@]}"; do
            [ -d "$d" ] || continue
            while IFS= read -r -d '' f; do
              if grep -qE 'using[[:space:]]+NinjaTrader|namespace[[:space:]]+NinjaTrader|using[[:space:]]+NT8\.SDK\.' "$f"; then
                echo "::notice file=$f::Skipping non-portable source (references NinjaTrader/NT8.SDK)"
              else
                portable_files+=("$f")
              fi
            done < <(find "$d" -type f -name '*.cs' -print0)
          done
          if [ ${#portable_files[@]} -eq 0 ]; then
            echo "::warning ::Stage B found no portable .cs files; skipping compile"
            exit 0
          fi
          mcs -langversion:7.2 -target:library -out:stageB.dll "${portable_files[@]}"

      - name: Stage C — Diagnostics/Harness/Sizing/Telemetry/Trailing/Facade (portable only)
        shell: bash
        run: |
          set -euo pipefail
          folders=(Diagnostics Harness Sizing Telemetry Trailing Facade)
          portable_files=()
          for d in "${folders[@]}"; do
            [ -d "$d" ] || continue
            while IFS= read -r -d '' f; do
              if grep -qE 'using[[:space:]]+NinjaTrader|namespace[[:space:]]+NinjaTrader|using[[:space:]]+NT8\.SDK\.' "$f"; then
                echo "::notice file=$f::Skipping non-portable source (references NinjaTrader/NT8.SDK)"
              else
                portable_files+=("$f")
              fi
            done < <(find "$d" -type f -name '*.cs' -print0)
          done
          if [ ${#portable_files[@]} -eq 0 ]; then
            echo "::warning ::Stage C found no portable .cs files; skipping compile"
            exit 0
          fi
          mcs -langversion:7.2 -target:library -out:stageC.dll "${portable_files[@]}"
