---
name: NT8 Guard (layout-aware)

'on':
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch: {}

jobs:
  guard:
    name: NT8 Guard (layout-aware)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Stage A (Abstractions, Common, Strategies)
        run: |
          dirs=(Abstractions Common Strategies)
          files=()
          for d in "${dirs[@]}"; do
            if [ -d "$d" ]; then
              dir_files=()
              while IFS= read -r -d '' f; do
                dir_files+=("$f")
              done < <(find "$d" -name '*.cs' -print0)
              if [ ${#dir_files[@]} -eq 0 ]; then
                echo "::warning::Stage A: $d has no .cs files"
              else
                files+=("${dir_files[@]}")
              fi
            else
              echo "::warning::Stage A: $d missing"
            fi
          done
          if [ ${#files[@]} -eq 0 ]; then
            echo "::warning::Stage A: nothing to compile"
          else
            mcs -langversion:7.2 -target:library -out:stageA.dll "${files[@]}"
          fi

      - name: Stage B (Orders, NT8Bridge, Risk, Session)
        run: |
          dirs=(Orders NT8Bridge Risk Session)
          files=()
          for d in "${dirs[@]}"; do
            if [ -d "$d" ]; then
              dir_files=()
              while IFS= read -r -d '' f; do
                dir_files+=("$f")
              done < <(find "$d" -name '*.cs' -print0)
              if [ ${#dir_files[@]} -eq 0 ]; then
                echo "::warning::Stage B: $d has no .cs files"
              else
                files+=("${dir_files[@]}")
              fi
            else
              echo "::warning::Stage B: $d missing"
            fi
          done
          if [ ${#files[@]} -eq 0 ]; then
            echo "::warning::Stage B: nothing to compile"
          else
            mcs -langversion:7.2 -target:library -out:stageB.dll "${files[@]}"
          fi

      - name: Stage C (Diagnostics/Harness/Sizing/Telemetry/Trailing/Facade)
        run: |
          dirs=(Diagnostics Harness Sizing Telemetry Trailing Facade)
          files=()
          for d in "${dirs[@]}"; do
            if [ -d "$d" ]; then
              dir_files=()
              while IFS= read -r -d '' f; do
                dir_files+=("$f")
              done < <(find "$d" -name '*.cs' -print0)
              if [ ${#dir_files[@]} -eq 0 ]; then
                echo "::warning::Stage C: $d has no .cs files"
              else
                files+=("${dir_files[@]}")
              fi
            else
              echo "::warning::Stage C: $d missing"
            fi
          done
          if [ ${#files[@]} -eq 0 ]; then
            echo "::warning::Stage C: nothing to compile"
          else
            mcs -langversion:7.2 -target:library -out:stageC.dll "${files[@]}"
          fi
